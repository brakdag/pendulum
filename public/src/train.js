var brain = {"neurons":[4,100,2],"weights":[-0.545118270533931,-0.6641712260038819,0.1443557127905386,-0.7939783010191426,0.2958951424641958,0.6552187937092921,-0.8093485503295614,-0.13866975083299504,-0.027996053636136775,0.15110075612753038,0.5443232455943554,0.022462327131616,0.4091001483353507,0.37861541533985354,-0.41788317375350603,0.6308651363541551,-0.565151503133916,0.6458398183306189,0.10491867842973379,0.9155454632611515,-0.2482986109448344,-0.5965612370412376,-0.4199240222716494,0.5077807245644115,-0.4267569150493622,-0.7365146501421482,0.7955263974513351,-0.8414508576353166,-0.13336618693949465,-0.2986266312983723,0.21648641928826962,0.8030125815123417,-0.8306015787466983,0.2110358415196414,0.06614770123750002,0.9122012685084737,0.13053681823127894,0.22569474954415147,-0.4781332368833491,0.4927449130714443,-0.8932702686000273,0.937522520563725,0.344576120817468,-0.11121184928640071,-0.27862143394588257,0.7120894643757669,0.41774446600385806,0.8726547208144582,0.7995374104218302,-0.34490306466,-0.6277701922354617,-0.4337254031558624,-0.4438158539296817,0.3207558681380078,0.61500922313959,-0.6660254307805187,-0.15842694189352047,-0.5102353740249002,0.4871400323676296,-0.2499556100722078,0.5780257807290847,-0.8537535160251499,0.4665282296110691,-0.33859499787771785,0.8790500458384343,-0.05546256283213058,0.0665617085626602,-0.032716339759064184,-0.5093824828431985,-0.9261754241460278,0.842394763697853,0.48381393754784385,0.30843784455952994,0.9880367387773816,-0.7543073562403975,-1.3404174257742811,-0.47152464071751554,-0.4613714109138831,-0.9554948414722819,0.5011607218718188,-0.7921431868974307,0.30955781447499886,0.5516967774933179,0.16862620334706868,0.407319378862653,-0.20377219616086228,0.08194790079581304,-0.757630144706861,-0.7126579950271505,-0.5850569132896406,0.0934754188059519,1.2120294902956432,0.1395681471906398,0.33646417748260715,0.14897149571166457,0.379615891460924,-0.4517694255441227,-0.8334892057631431,-0.224191588062419,-0.6730156192163368,-0.07821475913769715,-0.13516945896306742,1.0092610316791977,0.7698970603138493,0.679027059630946,-0.2840973290037758,-0.07117056330765359,-0.7411688127513671,-0.7695884124363113,-0.48651845816176564,0.9794077594647157,-0.7927859687926802,-0.7617747820169516,0.09260092818206322,0.9255222061048147,0.8151475465951514,0.6601811795462633,0.6984170766514017,0.5781595047415191,0.5369631434616045,-0.12776749666181564,-0.11095101688965814,0.4425713857382947,-0.2045877709862256,-0.7832525114349655,-0.44234498367714536,0.48632503690585294,-0.30808846745058727,-0.9670429095782347,0.8397153072437415,-0.924846253167277,-0.656126865842455,-0.7464059020673557,0.4982213859044209,0.19728220107470795,0.026277945627590782,-0.5720072139806245,-0.09850130979479821,0.23813344339014675,0.8911154786218733,-0.2581029878495591,0.5200101714156333,0.33577493607313924,0.40677377245447843,0.617338545557113,0.8208143926289737,0.14475481638421384,0.658744975716643,-0.18989479899976391,-0.07185313230731749,-0.8430416892466175,0.9531688090275163,0.5666690538412884,-0.0494734262105494,0.18571746288512214,0.5805185736845333,0.8663363376476467,-0.5201261786620206,0.8756354472133778,-0.5542700067849493,-0.9548734729713821,-0.8281488314508323,0.4823206307562855,-0.7782043159356857,0.6997924305100649,-0.6821576616105061,0.10454899742352053,0.6213003948264162,-0.18310132107855548,-0.7393797733410992,-0.19342895621366507,-0.19165785525275858,0.23490844660590415,-0.954122682355806,-0.023347511133587684,-0.0001577463921464961,0.9199507525518458,-0.38358831421394646,0.9270853362385427,-0.6870291588205335,-0.5513594242666628,0.03777883072748445,-0.9010823301677946,1.092009510016533,-0.6257175206519086,-0.9684429041783362,0.7009034517764228,-0.2249647523708962,-0.4518639806273077,0.333892214544385,0.204103545836392,-0.3405067288981414,0.8025520229137904,-0.7093478856122744,-0.5107157950706132,0.5624289907361004,0.8745569471325663,-0.23573351133494036,0.11086830189856567,0.23639680004338892,-0.7237331179945117,-0.35951937768988285,-0.8075930966073603,0.689840824209917,0.5112322888224954,0.9135242147961948,0.2761400320445302,0.8942951423343954,-1.2187301586389085,-0.4829391030346475,0.9912087802967586,0.7441136940034805,0.695467283439605,0.22803314645770545,-0.5353938347645055,-0.6748297848184031,0.5358304190387408,-1.3122660159929604,-0.8972062049571679,0.518355652632926,-0.3440803656496869,-0.36233032366779394,-0.0036788540833927463,0.42905945140526436,0.7148682603542986,0.604587465555821,-0.3964709382138216,-0.6775053391432535,-0.5372018600971655,0.15659044021282087,0.4411954598405039,0.10399315107920026,-0.23558067189668686,0.8090865362196986,-0.16880466400284755,0.9094438993446281,0.3989415374812393,0.3793923780026778,0.625229604647197,0.21196833869313414,0.561339571773896,-0.2674715977133446,-1.2295174063515295,0.7119816139753095,0.7210477453898672,1.1192989654453067,-0.3787820377461397,0.501131197029228,-0.5415345365486703,-0.055860914146123264,0.16894226507177734,0.5418630044460793,0.5409127678455441,0.4387700954321878,-0.5694479836112984,0.3095818302995821,0.8090169571923762,0.046339221952121035,0.3939562274557451,0.584765075018105,-0.7016252827289886,-0.8496879331835325,0.8446242446696988,0.008941290919379341,0.4908964223500094,0.39252911909165,-0.45846572191355417,-0.10659920684673097,-0.7844740928984204,0.18021269149705388,-0.10493009843859724,-0.017590002299111784,0.5518787602120034,-0.5643406712230323,-0.09373356108183128,0.7572013799975603,0.9820870835138491,0.38623183781981174,-1.1534043624139818,0.38597731707834537,0.9621990902197495,0.16420218282411536,-0.8198109928139772,0.05448870033878972,0.5514878444113118,0.8801421207063309,-0.7185217639899477,-0.3517188249521146,0.496678753430174,0.06173477560266871,0.9017033084486457,-0.12053441832336942,0.6867181534182039,0.8968606793503433,-0.8034863221490753,-0.9536095098196431,0.341853073880352,-0.4935957563470956,0.01119145230637697,0.9033684749518609,0.4056486497988545,-0.5243744870892799,0.38965567313207083,-0.28778914533711086,-0.4946668328249908,0.7484206555866577,-0.9246031317646244,-0.5011708980312259,-0.39065740744944,-0.8261507439260605,0.288592225280911,-0.05545969700376796,0.22273655778543233,-1.235176793654859,0.9575905707391179,-0.06393351991437823,-0.1609060305653034,-0.9283920849324445,-0.666949081899566,0.5830497198892024,0.47033393341000207,-0.3754058353452987,0.6025973123407811,0.14851671291569968,-0.9936555118915935,-0.9335762008062183,-0.3522864927974072,0.7740215156547721,0.5095524974727197,-0.507273560423469,0.2500117046072754,0.6801814375380877,0.1723801777379501,-0.1004870156962876,0.7922966483537395,-0.6653094919249769,0.10039216596885803,-0.1845446792747616,-0.08826425558324091,0.8567514327180725,-0.6933961113265581,-0.9570351255692104,0.4348618437236911,1.186398909312279,0.412869701181128,0.13390732423321428,0.8929922824711225,-0.12079174773467227,0.4662371278259734,0.3445517128146074,-0.9328211866886313,-0.23945533531348095,-0.8430579324535206,1.1348066299764255,0.19854499685260185,0.46793454595409933,0.9437927848286094,-0.10061052151893568,0.23955747371643654,0.7388185881008895,-0.9663966533777244,0.03511262630686485,-0.10837617359570384,-0.004571889961887621,0.7437813915512956,0.5481873730715345,-0.47905196570345643,0.6861475918215096,-0.26538254989289367,0.850030010484391,0.2733909225020761,-0.04986843516452222,0.6672024103811243,0.2546191191510623,-0.36816879624401944,-0.9936959887621359,0.5550064129167218,0.2160015601368106,0.21576043238431986,0.202419790066652,-0.03562226509976041,0.0906757129582374,-0.2589119185904871,0.04265959963467969,-0.27330062327214844,-0.043950904981340244,0.8190757777075395,-0.6567811176146732,-0.2047830625115319,0.05013640378252138,-0.9114256181460849,-0.4150984867178309,0.4448810471452407,0.920626008074501,-0.167967282559788,0.936329046356398,-0.4067141082039276,0.45044669124978487,0.07419538724683239,-0.11362046466894027,0.9699460618307252,0.46583941824386343,-0.39812777420063195,0.03594683180325209,0.27291181896894656,-0.853207846944374,0.8113649787668753,0.1309643740089741,-0.025015819971291542,1.2649173764215305,-0.44339256492711865,-0.15617929566924893,-0.25802346136821885,-0.1565141068639604,-0.8012995341062767,0.45690509500833,-0.8697284569177812,1.04417428415979,0.5809750799798445,0.2594012442877469,0.8726072551835289,-0.6263468375696726,-0.5816950940726802,0.8801042655973923,-0.901779751117318,-0.16296863020507457,-0.6584573753625733,0.967066391934214,0.39591345453796345,-0.24713994235117465,0.975279153694971,-0.08949510284950657,0.5453407019306007,-0.24923677444572956,0.7696306042965739,-0.5623644617652546,0.9340439158256313,0.8788106696742859,-0.6393734758738163,1.2111956443177416,-0.1565248162566646,-0.15619515051108923,0.8351347197898735,0.9616217653013939,-0.7268732233784241,-0.07992526475279949,0.8440319673240002,0.964144052866855,0.6184426475364115,-0.41126907958129344,0.9865099246931499,-0.06864208174865016,-0.798004559126491,-0.7592727351999868,1.217996071470636,-0.9490016127498522,0.6494822195104839,0.02782174847708152,0.8451850953766749,-0.6095555294571504,-0.0209477421427251,0.8742582396615752,-1.0766158988456573,-0.9479611515902411,-0.6605200724972122,-0.014401108180816857,0.32730375554661073,-0.07467359565197906,-0.23756089877609998,0.4617054572894479,0.09329833583077152,0.5630171375348929,0.7985420375518317,0.14513223973021194,0.856905478863152,0.5446439808630559,0.8045733978804637,0.7670585954931957,-0.9614359167036985,0.14364299016736926,0.3975968496482607,1.4115195529027673,-0.711748561760738,-1.262599235247229,-0.28104755699367234,0.685060682738361,0.6441087927340612,-0.1452574041732233,0.5588084020618713,-0.1323102290866931,1.2362815233345603,0.12970849469967183,-0.6398770832058962,0.5040993277358803,0.370697193630829,0.5427434236870567,-0.18688190691973583,0.3565043950208824,-0.9862890666858579,0.8954680389334602,-0.1010921779963796,0.3060015051858307,-0.15664647557275124,0.9025139526351942,0.07698423919941666,0.37685376636982104,-0.32662052998862157,-0.932509589535615,0.8479839507965212,0.49745007215008963,-0.3564129983312787,-0.0023911797043796312,0.11984969380171862,0.8290326521645399,-0.19652969585452285,0.9113573563198782,0.7391293764986444,-0.6962764760485793,-0.22082047976087704,0.5969364249432436,0.05228690187981977,-0.913288770475444,-0.7500325270570283,0.7857727859647552,0.8667941294615584,-0.6729696551472006,0.24523385626646244,0.5610735343945144,0.8520732929814847,-0.6742378555180109,0.5372112334420702,-0.9922096226703792,-0.11311761082323368,0.09595401595344555,-0.44222940142021105,0.9647025445192656,0.26645486320127576,0.9413563024417417,0.4822936070423469,0.01869633824348238,-0.8486981881420506,0.2450569843572028,-0.2332490347368119,-0.9393480711709752,-0.36268762087317485,0.15376727726555295,-0.6866027816450604,-0.1363715541809567,0.2279837580144939,0.5392303772493654,-0.9514231244021336,-0.7738706027982158,0.9119242440507143,-0.06936067915752964,0.530614118106671,-0.363396949004855,-0.7874845445163148,0.9211730313485242,0.6689115081017794,0.014914434485508998,-1.0375485182811617,-0.42848122628860175,0.7299844490278864,-0.8739946715062326,0.3520246635694939,-0.951082992267454,0.3941732702427827,0.40925637207799914,0.18740607330447023,0.06256239147339437,-0.27569903674509577,-0.2847713090192072,0.3037993031161794,-0.34189446819650327,-0.6424942795536386,-0.6327754048311851,0.2144564064066512,-0.8774375802542806,0.8992965787786469,0.13853772609616977,-0.6420909564078192,-0.6176664701885346,0.5373253468156571,0.2556560827013237,-0.9904790522092637,-0.02688383806984329,-0.19270150120426344,0.4581756144662601,0.8973766496228115,-0.9877358913902778,0.5662730233430047,0.5335715608204024,0.607407750126177,-0.5399763108523317,0.8057282627276545,-0.9579116197574771,-0.9193614699879578,-0.5862719152865945,0.6445209801636511,0.42795474855632687]}

var SHOWLOG =false
function log(t){
	if(SHOWLOG)console.log(t)
}
const config={
	networkshape:[4,[3],2],
	generations:40,
	population:7
}

const msg={
	start:"El entorno IWIN2 inicializado.",
	nostart: "No está inicializado el entorno IWIN2",
	inerr:"Error en Entrada",
}


function train(c1,retrain){
	var Neuvol = new Neuroevolution({network:config.networkshape ,population:config.population})
	var gen
	var test =[]

	traingenerations(Neuvol,gen,c1,0,x=>{
		console.log(x)})
	}
	
function traingenerations(Neuvol,gen,c1,i,cb){
	if ((i > config.generations-1) ){
		cb([])
		return true
	}
	 gen = Neuvol.nextGeneration();
	 brain=gen[0].getSave()
	traingeneration(Neuvol,gen,c1,0,x=>{traingenerations(Neuvol,gen,c1,++i,y=>cb([y.concat(x)]))
	$("#generation").text("Generation: " + i +" Max: " + Math.max.apply(null,x))
	console.log(`Generation:${i},Score:${x}`)
	if (x>200) i=config.generations-1
	})

}




function traingeneration(Neuvol,gen,c1,g,cb)
{
	if (g > config.population-1){cb([])
		return true
	}
	c1.reset()
	var adn = gen[g]
	var resp=c1.step(0)
	var clock=setInterval(() => {
					var observation = [resp.state.x,resp.state.theta,resp.state.xdot,resp.state.thetadot]
					var r=adn.compute(observation)
					resp=c1.step((r[0]>0.5 && r[1]>0.5)?1:0)
					$("#reward").text(`Reward :${resp.reward}`)
        			$("#done").text(`Done :${resp.done}`)
        			$("#brain").text(`Brain :${g}`)
        			c1.render(1 / frameRate * 1000)
					if (resp.done==1 || resp.reward>1800){
						Neuvol.networkScore(adn,resp.reward);
						traingeneration(Neuvol,gen,c1,++g,x=>{cb(x.concat(resp.reward))})
						clearInterval(clock)
					}
		}, 1 / frameRate * 1000)
	return true
}


/*
 Se dá como resuelto después de 100 test consecutivos con puntame mayor a 195
*/
var dataT

function tests(c1){
	dataT=[]
var Neuvol = new Neuroevolution({network:config.networkshape ,population:1})
	var gen = Neuvol.nextGeneration();
	gen[0].setSave(brain)
	test(gen[0],c1,0,x=>console.log(x))	
}



function test(adn,c1,i,cb){
	if (i>100-1){
		$("#test").text("Tests: " + i + ` Result: ${(dataT.reduce((a,e)=>a+e>195?1:0,0)>95)?"SUCCESS":"FAIL"}`)
		cb([])
		return null
	}

	c1.reset()
	resp=c1.step(0)
var clock=setInterval(() => {
		var observation = [resp.state.x,resp.state.theta,resp.state.xdot,resp.state.thetadot]					
		var r=adn.compute(observation)
		resp=c1.step((r[0]>0.5 && r[1]>0.5)?1:0)
		c1.render(1 / frameRate * 1000)
		if (resp.done==1 || resp.reward>196){
						dataT.push(resp.reward)
						test(adn,c1,++i,x=>cb(x.concat(resp.reward)))
						clearInterval(clock)
		}

		$("#reward").text(`Reward :${resp.reward}`)
		$("#done").text(`Done :${resp.done}`)
		var exito = dataT.reduce((a,e)=>a+(e>195?1:0),0)
        var falla = i-exito
        //console.log(dataT,exito,falla)
		$("#test").text("Test: " + i + ` Success:${exito} Fail:${falla}`)
		

}, 1 / frameRate * 1000)
}
